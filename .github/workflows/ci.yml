name: CI
on:
  pull_request:
  push:
    branches: [main]

# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  pre-commit-checks:
    name: Pre-commit Checks
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # needed for 'pre-commit-mirrors-insert-license'
          fetch-depth: 0
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@14c8aabd75893f83f4ab30c03e7cf853c8208961 # v0.8.10
        with:
          environments: default lint
      - name: Install repository
        run: pixi run -e default postinstall
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure

  unit-tests:
    name: Unit Tests (${{ matrix.os == 'ubuntu-latest' && 'Linux' || 'Windows' }}) - ${{ matrix.environment }}
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        environment: [py310, py311, py312, py313]
    services:
      minio:
        # we use the bitnami/minio image to avoid the need to set up the minio server
        # through a 'command' section, which is not supported by GitHub Actions.
        image: bitnami/minio:latest
        ports:
          - 9000:9000
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          --name minio
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@14c8aabd75893f83f4ab30c03e7cf853c8208961 # v0.8.10
        with:
          environments: ${{ matrix.environment }}
      - name: Install repository
        run: pixi run -e ${{ matrix.environment }} postinstall
      - name: Run pytest
        run: pixi run -e ${{ matrix.environment }} test-coverage --color=yes
        env:
          AWS_SECRET_ACCESS_KEY: minioadmin
          AWS_ACCESS_KEY_ID: minioadmin
          AWS_ENDPOINT_URL: http://127.0.0.1:9000
      - name: Upload codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
